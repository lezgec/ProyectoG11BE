// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoBE.Models.YourNamespace.Models;

#nullable disable

namespace ProyectoBE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241203003444_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoBE.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropuestaDefinicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("ProyectoBE.Models.Coordinador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coordinadores");
                });

            modelBuilder.Entity("ProyectoBE.Models.Gestor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gestores");
                });

            modelBuilder.Entity("ProyectoBE.Models.Propuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.ToTable("Propuestas");
                });

            modelBuilder.Entity("ProyectoBE.Models.PropuestaGestor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GestorId")
                        .HasColumnType("int");

                    b.Property<int>("IdGestor")
                        .HasColumnType("int");

                    b.Property<int>("IdPropuesta")
                        .HasColumnType("int");

                    b.Property<int>("PropuestaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GestorId");

                    b.HasIndex("PropuestaId");

                    b.ToTable("PropuestasGestores");
                });

            modelBuilder.Entity("ProyectoBE.Models.RevisionPropuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoordinadorId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRevision")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCoordinador")
                        .HasColumnType("int");

                    b.Property<int>("IdPropuesta")
                        .HasColumnType("int");

                    b.Property<int>("PropuestaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoordinadorId");

                    b.HasIndex("PropuestaId");

                    b.ToTable("RevisionesPropuesta");
                });

            modelBuilder.Entity("ProyectoBE.Models.Propuesta", b =>
                {
                    b.HasOne("ProyectoBE.Models.Alumno", "Alumno")
                        .WithMany("Propuestas")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");
                });

            modelBuilder.Entity("ProyectoBE.Models.PropuestaGestor", b =>
                {
                    b.HasOne("ProyectoBE.Models.Gestor", "Gestor")
                        .WithMany("PropuestaGestores")
                        .HasForeignKey("GestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoBE.Models.Propuesta", "Propuesta")
                        .WithMany("PropuestaGestores")
                        .HasForeignKey("PropuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gestor");

                    b.Navigation("Propuesta");
                });

            modelBuilder.Entity("ProyectoBE.Models.RevisionPropuesta", b =>
                {
                    b.HasOne("ProyectoBE.Models.Coordinador", "Coordinador")
                        .WithMany("Revisiones")
                        .HasForeignKey("CoordinadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoBE.Models.Propuesta", "Propuesta")
                        .WithMany("Revisiones")
                        .HasForeignKey("PropuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordinador");

                    b.Navigation("Propuesta");
                });

            modelBuilder.Entity("ProyectoBE.Models.Alumno", b =>
                {
                    b.Navigation("Propuestas");
                });

            modelBuilder.Entity("ProyectoBE.Models.Coordinador", b =>
                {
                    b.Navigation("Revisiones");
                });

            modelBuilder.Entity("ProyectoBE.Models.Gestor", b =>
                {
                    b.Navigation("PropuestaGestores");
                });

            modelBuilder.Entity("ProyectoBE.Models.Propuesta", b =>
                {
                    b.Navigation("PropuestaGestores");

                    b.Navigation("Revisiones");
                });
#pragma warning restore 612, 618
        }
    }
}
